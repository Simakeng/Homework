import matplotlib.pyplot as plt
import numpy as np
import argparse
import ltspice
import sys
import os

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="LTSpice Graph Generator")
    parser.add_argument('raw_file', metavar='file_path', type=str,
                        help="RAW File generated by LTSpice")
    parser.add_argument('graph_file', metavar='graph_path', type=str,
                        help="Graph file to be plot to")
    parser.add_argument('values', metavar='exprs', type=str, nargs='+',
                        help="Expresions to be ploted")

    args = parser.parse_args()

    if(not os.path.exists(args.raw_file)):
        print('invalid raw file: file not find!', file=sys.stderr)

    raw = ltspice.Ltspice(args.raw_file)
    raw.parse()

    print(len(raw.variables), 'variable found')

    time = raw.get_time()

    graph_datas = []

    for need_exps in args.values:
        if(not need_exps in raw.variables):
            print('"%s" did not contains "%s"' % (args.raw_file, need_exps))
            
        graph_datas.append({
            "name" : need_exps,
            "data" : [raw.get_data(need_exps,i)for i in range(raw.case_count)]
        })
    lines = []
    legends = []
    for data in graph_datas:
        for case in data['data']:
            line, = plt.plot(time, case)
            lines.append(line)
            legends.append(data['name'])

    plt.legend(lines,legends)
    # datas = [raw.get_data(exps) for exps in args.values]
    # print(datas)
    plt.grid()
    plt.savefig(args.graph_file)

    pass
